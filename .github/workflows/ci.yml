name: ci
on:
  push:
    branches:
    - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g. v1.0.0)'
        required: true
      description:
        description: 'Release description (markdown supported)'
        required: true

permissions:
  contents: write

jobs:
  build:
    if: github.event_name == 'push'
    env:
      PROJ_PATH: ./LCSoft.ApiKey/LCSoft.ApiKey.csproj
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ steps.set_output.outputs.name }}
    strategy:
      matrix:
#        dotnet-version: [ '6.0.x', '9.0.x' ]
        dotnet-version: [ '9.0.x' ]
    timeout-minutes: 15
    steps:
      - name: 🛠️ Checkout
        uses: actions/checkout@v4
      - name: ⚙️ Setup .NET 9.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x
#          source-url: https://nuget.pkg.github.com/luigi-sw/index.json
#        env:
#          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
#      - name: Setup .NET ${{ matrix.dotnet-version }}
#        uses: actions/setup-dotnet@v4
#        with:
#          dotnet-version: ${{ matrix.dotnet-version }}
      - name: 📦 Restore dependencies
        run: dotnet restore
      - name: 🏗️ Build Project
        run: dotnet build --no-restore --configuration Release
      - name: ✅ Run Tests
        run: dotnet test --no-restore --configuration Release --no-build
#      - name: Create the Package
#        run: dotnet pack ${{ env.CAMINHO_PROJETO }} --configuration Release -o out
#      - name: Publish
#        run: dotnet nuget push "bin/Release/*.nupkg" -k (--api-key??) ${{ secrets.GITHUB_TOKEN }} -s https://nuget.pkg.github.com/luigi-sw/index.json --skip-duplicate
      - name: Set artifact name
        id: set_output
        run: |
          ARTIFACT_NAME=nupkg-release-${{ github.run_id }}
          echo "Artifact name will be: $ARTIFACT_NAME"
          echo "name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
      
      - name: 🧹 Clean up existing artifact (if re-run)
        run: rm -rf ${{ github.workspace }}/out
      
      - name: 📦 Create NuGet Package
        run: dotnet pack ${{ env.PROJ_PATH }} --configuration Release -o out

      - name: List package files before release
        run: ls -la ./out
      - name: 📤 Upload Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: out/*.nupkg
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
        
      - name: ⬇️ Download Artifacts
        uses: actions/download-artifact@v4
        with:
#          name: ${{ steps.set_output.outputs.name }}
          name: nupkg
          path: ./out

      - name: List package files before release
        run: ls -la ./out

      - name: Checkout
        uses: actions/checkout@v4
        
      - name: 📄 Get version from .csproj
        id: version
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" LCSoft.ApiKey/LCSoft.ApiKey.csproj)
          echo "Detected version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: 🏷️ Create Git Tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git fetch origin
          git tag v${{ steps.version.outputs.version }}
          git push origin v${{ steps.version.outputs.version }}

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          body: ${{ github.event.inputs.description }}
          files: ./out/*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
